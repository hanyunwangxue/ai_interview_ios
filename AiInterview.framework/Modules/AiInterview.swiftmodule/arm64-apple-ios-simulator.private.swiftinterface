// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AiInterview
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFAudio
import AVFoundation
@_exported import AiInterview
import AliyunLogProducer
import Combine
import CommonCrypto
import CoreGraphics
import CoreText
import Dispatch
import Foundation
import IJKMediaFramework
import MobileCoreServices
import Network
import QCloudCOSXML
import QCloudRealTime
import QuartzCore
import Swift
import SwiftUI
import SystemConfiguration
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os.log
import os
import zlib
public enum AiEnvironment : Swift.Int {
  case dev
  case qa
  case preProd
  case prod
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class AiEnvironmentManager {
  public static var env: AiInterview.AiEnvironment
  @objc deinit
}
@objc @_Concurrency.MainActor(unsafe) open class AiInterViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) weak public var delegate: (any AiInterview.AiInterViewControllerDelegate)?
  @_Concurrency.MainActor(unsafe) public init(token: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
}
extension AiInterview.AiInterViewController : QuartzCore.CAAnimationDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func animationDidStop(_ anim: QuartzCore.CAAnimation, finished flag: Swift.Bool)
}
public protocol AiInterViewControllerDelegate : AnyObject {
  func interViewControllerDidFinishInterview()
}
@objc @_inheritsConvenienceInitializers public class AiLoger : ObjectiveC.NSObject {
  public static var enableLocalLog: Swift.Bool
  @objc override dynamic public init()
  @objc deinit
}
infix operator +| : DefaultPrecedence
infix operator +- : DefaultPrecedence
infix operator <- : DefaultPrecedence
infix operator >>> : DefaultPrecedence
extension UIKit.UILabel {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func layoutSubviews()
}
extension AiInterview.AiEnvironment : Swift.Equatable {}
extension AiInterview.AiEnvironment : Swift.Hashable {}
extension AiInterview.AiEnvironment : Swift.RawRepresentable {}
